---
import { getCollection, type CollectionEntry } from 'astro:content';
import PageLayout from '@/layouts/PageLayout.astro';
import PageHeader from '@/components/layout/PageHeader.astro';
import Image from '@/components/ui/Image.astro';

export async function getStaticPaths() {
  const journals = await getCollection('journal');
  return journals.map((journal: CollectionEntry<'journal'>) => ({
    params: { slug: journal.slug },
    props: { journal },
  }));
}

const { journal } = Astro.props as { journal: CollectionEntry<'journal'> };
const { Content } = await journal.render();

// build a map of all local images (eagerly at build time)
const images = import.meta.glob('/src/assets/imgs/journal/*');
const imageFilename = journal.data.image; // example: "my-cover"

// find the module whose path contains that filename
const entry = imageFilename
  ? Object.entries(images).find(
      ([path]) => path.includes(`/${imageFilename}.`) // matches /path/to/my-cover.jpg, .png, etc
    )
  : null;

const imageModule = entry ? ((await entry[1]()) as { default: unknown }).default : null;
---

<PageLayout title={journal.data.title} description={journal.data.description || journal.data.title} ogImage={journal.data.imageSourceUrl}>
  <article>
    <PageHeader subtitle={journal.data.description} date={journal.data.date.toLocaleDateString()}>{journal.data.title}</PageHeader>

    {
      imageModule && (
        <Image
          class="py-0"
          src={imageModule}
          alt={journal.data.title}
          sourceLabel={journal.data.imageSourceLabel}
          sourceUrl={journal.data.imageSourceUrl}
        />
      )
    }

    <Content />
  </article>
</PageLayout>
