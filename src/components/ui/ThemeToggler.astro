---
import { Sun, Moon } from '@/components/icons/index.astro';
---

{/* CAUTION: This code is writted with magic, DO NOT TOUCH IT */}
{/* if you touch this code, YOU MUST TEST THE TOGGLE BUTTON 'AGGRESSIVELY' IN ALL CASES */}
<button
  id="theme-toggler"
  class="hover:text-primary text-foreground h-6 w-6 transition-colors duration-150"
  aria-label="Theme toggle button">
  <Moon class="hidden" />
  <Sun class="hidden" />
</button>

{
  /* 
  Dark mode toggler:
  - stores theme in localStorage as "t" = 'd' (dark) or 'l' (light)
  - applies html.dark instantly
  - swaps moon/sun icons (first/second <svg>)
  - click button #theme-toggler to toggle
*/
}

<script is:inline>
  // const b = document.getElementById('theme-toggler'),
  //   [m, s] = b.querySelectorAll('svg'),
  //   g = () => localStorage.getItem('t') || 'd',
  //   u = x => {
  //     localStorage.setItem('t', x);
  //     document.documentElement.classList.toggle('dark', x === 'd');
  //     m.classList.toggle('hidden', x !== 'd');
  //     s.classList.toggle('hidden', x === 'd');
  //   };
  // b.onclick = () => u(g() === 'd' ? 'l' : 'd');
  // u(g());

  const themeToggler = document.getElementById('theme-toggler');
  const [moonIcon, sunIcon] = themeToggler.querySelectorAll('svg');

  const getTheme = () => localStorage.getItem('t') || 'd';

  const applyTheme = (doc = document, theme = getTheme()) => {
    doc.documentElement.classList.toggle('dark', theme === 'd');
  };

  const updateTheme = theme => {
    localStorage.setItem('t', theme);
    applyTheme(document, theme);
    moonIcon.classList.toggle('hidden', theme !== 'd');
    sunIcon.classList.toggle('hidden', theme === 'd');
  };

  themeToggler.onclick = () => {
    updateTheme(getTheme() === 'd' ? 'l' : 'd');
  };

  updateTheme(getTheme());

  document.addEventListener('astro:before-swap', e => {
    applyTheme(e.newDocument);
  });
</script>
